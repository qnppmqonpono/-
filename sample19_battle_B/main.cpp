/*******************************************************************************
* タイトル:		メインプログラム
* プログラム名:	main.cpp
* 作成者:		GP11A132 99 外岡高明
* 作成日:		2022/05/16
*******************************************************************************/

/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "title.h"
#include "player.h"
#include "enemy.h"
#include "field.h"
#include "battle.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/




/*******************************************************************************
* 構造体定義
*******************************************************************************/




/*******************************************************************************
* プロトタイプ宣言(関数の取説だと思って)
*******************************************************************************/











/*******************************************************************************
* グローバル変数
*******************************************************************************/





// シーン管理用
int mode = 0;	// 0:Title  1:Field  2:バトル





/*******************************************************************************
 関数名:	int main( void )
 引数:		void
 戻り値:	正常終了: int型の 0
 説明:		メイン関数
*******************************************************************************/
int main( void )
{	
	Init();			// 初期化処理

	while (1)
	{
		Update();	// 更新処理

		Draw();		// 描画処理
	}

	Uninit();		// 終了処理
	
	/* 終了 */
	return 0;
}



// 初期化処理
void Init(void)
{

	// ランダムの初期化処理
	srand((unsigned)time(NULL));

	// Titleの初期化
	InitTitle();

	// Fieldの初期化
	InitField();

	// Battleの初期化
	InitBattle();


	printf("ゲームスタート！\n\n");
	printf("←→↑↓で移動します\n");


}


// 終了処理
void Uninit(void)
{
	// Battleの終了処理
	UninitBattle();

	// Fieldの終了処理
	UninitField();

	// Titleの終了処理
	UninitTitle();


	// キー入力待ち
	rewind(stdin);
	(void)_getch();
}


// 更新処理
void Update(void)
{
	switch (GetMode())
	{
	case 0:
		// タイトルの更新処理
		UpdateTitle();
		break;

	case 1:
		// フィールドの更新処理
		UpdateField();
		break;

	case 2:
		UpdateBattle();
		break;
	}

}


// 描画処理
void Draw(void)
{
	switch (GetMode())
	{
	case GAME_TITLE:
		// タイトルの描画処理
		DrawTitle();
		break;

	case GAME_FIELD:
		// フィールド表示
		DrawField();
		break;

	case GAME_BATITLE:
		DrawBattle();
		break;
	}
}


// モードの取得関数
int GetMode(void)
{
	return mode;
}


// モードをセットする関数
void SetMode(int no)
{
	mode = no;
}












