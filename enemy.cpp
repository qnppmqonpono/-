/*******************************************************************************
* タイトル:		エネミープログラム
* プログラム名:	enemy.cpp
* 作成者:		GP11A132 99 外岡高明
* 作成日:		2022/04/18
*******************************************************************************/



/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "enemy.h"


/*******************************************************************************
* マクロ定義
*******************************************************************************/


/*******************************************************************************
* 構造体定義
*******************************************************************************/


/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/
int GetFieldData(int y, int x);


/*******************************************************************************
* グローバル変数
*******************************************************************************/
ENEMY enemy[ENEMY_MAX];


/*******************************************************************************
 関数名:	
 引数　:	
 戻り値:	
 説明　:	
*******************************************************************************/
// エネミーの初期化処理
void InitEnemy(void)
{
	enemy[0].x = 2;
	enemy[0].y = 2;

}


// エネミーの終了処理
void UninitEnemy(void)
{

}


// エネミーの更新処理
void UpdateEnemy(void)
{
	// 移動する前に現在の座標を保存しておく
	int oex = enemy[0].x;
	int oey = enemy[0].y;

	// キー入力処理
	//int key;
	//rewind(stdin);
	//key = _getch();
	int key = rand() % 12;

	switch (key)
	{
	case 0:	// 左へ移動
		enemy[0].x--;
		break;

	case 1:	// 右へ移動
		enemy[0].x++;
		break;

	case 2:	// 上へ移動
		enemy[0].y--;
		break;

	case 3:	// 下へ移動
		enemy[0].y++;
		break;

		// わざと動かないときを用意している
	case 4:
	case 5:
	case 6:
	case 7:
	case 8:
	case 9:
	case 10:
	case 11:
		break;

	}

	// 移動後の座標が何になっているのか調べる
//	switch (field[enemy[0].y][enemy[0].x])
	switch( GetFieldData(enemy[0].y, enemy[0].x) )
	{
	case 0:			// 何もしない
		break;

	case 1:			// 障害物だから元の位置へ戻す
		enemy[0].x = oex;
		enemy[0].y = oey;
		break;

	}

}


// エネミーの描画処理
void DrawEnemy(void)
{
	printf("E");

}


ENEMY* GetEnemy(void)
{
	return &enemy[0];
}




